import{_ as e,c as n,a as s,o as t}from"./app-H6ZQ3zEr.js";const i="/ios-training/assets/hello-swiftui-DCdT_J-Q.png",o="/ios-training/assets/list-nav-01-JArCfXse.png",l="/ios-training/assets/list-nav-02-DDMJspmY.png",r="/ios-training/assets/date-input-exercise-Drz7OLzc.png",p={};function c(d,a){return t(),n("div",null,[...a[0]||(a[0]=[s(`<h1 id="swiftui" tabindex="-1"><a class="header-anchor" href="#swiftui"><span>SwiftUI</span></a></h1><div class="hint-container tip"><p class="hint-container-title">Estimated time</p><p>1/2 day</p></div><p>Apple provides two official UI frameworks : UIKit and SwiftUI.</p><p>UIKit is the originally used framework for UI development. It relies on defining the UI in a separate file (storyboard or xib) and the behavior in a swift file. In 2019, Apple release the first version of SwiftUI.</p><p>The remainder of this training focuses on SwiftUI.</p><h2 id="swiftui-1" tabindex="-1"><a class="header-anchor" href="#swiftui-1"><span>SwiftUI</span></a></h2><p>SwiftUI brings a new approach to build UIs that we can summarize as follows:</p><ul><li>All the UI is defined in Swift code. Neither Storyboards nor xibs are needed anymore.</li><li>The UI is defined in a declarative style.</li><li>States and bindings allow to hold the app data. The app UI updates automatically when these data change.</li><li>UI elements are structs that conform to the View protocol.</li><li>Complex views can be defined by breaking them into smaller views. This is called view composition.</li><li>The modifier technique is used to apply modifications to a view. A modifier returns a new view each time.</li></ul><p>The <a href="https://developer.apple.com/documentation/swiftui" target="_blank" rel="noopener noreferrer">official documentation of SwiftUI is available here</a>.</p><h2 id="prerequisites" tabindex="-1"><a class="header-anchor" href="#prerequisites"><span>Prerequisites</span></a></h2><p>It is recommended to use Xcode to learn and create SwiftUI apps. For simple apps, we can use the <a href="https://www.apple.com/swift/playgrounds/" target="_blank" rel="noopener noreferrer">Swift Playgrounds</a> app or create a Playground in Xcode.</p><h2 id="anatomy-of-a-basic-view" tabindex="-1"><a class="header-anchor" href="#anatomy-of-a-basic-view"><span>Anatomy of a basic view</span></a></h2><p>The following code shows a sample view.</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift"><pre><code class="language-swift"><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">VStack</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Hello SwiftUI&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>largeTitle<span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token punctuation">.</span>blue<span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token class-name">Button</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token class-name">HStack</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token class-name">Image</span><span class="token punctuation">(</span>systemName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;suit.heart.fill&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                        <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token punctuation">.</span>red<span class="token punctuation">)</span></span>
<span class="line">                    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;I am a button&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                        <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>headline<span class="token punctuation">)</span></span>
<span class="line">                        <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token punctuation">.</span>white<span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>orange<span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">cornerRadius</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>As noted earlier, SwiftUI views are structs that conforms to the View protocol. This protocol defined a computed property that returns a View as an opaque type.</p><p>The body of the view has a <code>VStack</code> as its root element. A <code>VStack</code> is a container view that arrange its direct children vertically (on a column). The first child is a <code>Text</code> view and its second child is a <code>Button</code>.</p><p>The <code>Text</code> view chains calls to some methods that we call <em>modifiers</em>. They allow to do anything that we want to the view that called it and they return a new <code>View</code> instance. This means that we can apply another modifier to the result of a modifier and so on (this is called chaining). This allows modifiers to have a declarative syntax that makes the code easy to understand. SwiftUI provides built-in modifiers and allows us to create custom ones. Can you match all the modifiers used in the code and their effects ?</p><details class="hint-container details"><summary>The modifiers used are:</summary><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift"><pre><code class="language-swift"><span class="line"><span class="token function">font</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token function">padding</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token function">background</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token function">cornerRadius</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><p>The button has no action, meaning that is does nothing on click and its content is defined as an <code>HStack</code>. An <code>HStack</code> is a container view that arrange its direct children horizontally (on a row). The stack contains an image and a button.</p><p>The view renders as illustrated by the image below.</p><figure><img src="`+i+'" alt="Hello SwiftUI" tabindex="0" loading="lazy"><figcaption>Hello SwiftUI</figcaption></figure><h2 id="a-summary-of-important-concepts" tabindex="-1"><a class="header-anchor" href="#a-summary-of-important-concepts"><span>A summary of important concepts</span></a></h2><ul><li><code>@State</code>: Single source of truth of a view and should not be shared with other views.</li><li><code>@Binding</code>: allows to pass a reference of a state to a child view using <code>$state</code>.</li><li><code>@EnvironmentObject</code>: Allows to globally share data between views. An <code>@EnvironmentObject</code> conforms to the <code>ObservableObject</code> protocol and its properties have the <code>@Published</code> property wrapper.</li><li><code>@ObservedObject</code>: Allows to observe changes in an object that conforms to the <code>ObservableObject</code> protocol.</li><li><code>List</code>: A container view that displays a scrollable list of data.</li><li><code>NavigationView</code> and <code>NavigationLink</code>: Allow to navigate between views.</li><li><code>UserDefaults</code>: A simple way to persist small data such as user preferences.</li><li><code>AsyncImage</code>: A view that can load and display an image from a URL.</li></ul><h3 id="examples" tabindex="-1"><a class="header-anchor" href="#examples"><span>Examples:</span></a></h3><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>This section provides links to download a folder from a git repository thanks to <a href="https://download-directory.github.io" target="_blank" rel="noopener noreferrer">download-directory.github.io</a>.</p></div><ul><li>This playground show an example of <code>@State</code> and <code>@Binding</code>: <a href="https://github.com/worldline/ios-training/tree/main/samples/SwiftUI-00-state-binding.swiftpm" target="_blank" rel="noopener noreferrer">State and Binding</a>. You can download the project using this <a href="https://download-directory.github.io/?url=https%3A%2F%2Fgithub.com%2Fworldline%2Fios-training%2Ftree%2Fmain%2Fsamples%2FSwiftUI-00-state-binding.swiftpm" target="_blank" rel="noopener noreferrer">link</a></li><li>This playground show an example of <code>@EnvironmentObject</code>: <a href="https://github.com/worldline/ios-training/tree/main/samples/SwiftUI-01-environment-object.swiftpm" target="_blank" rel="noopener noreferrer">Environment Object</a>. You can download the project using this <a href="https://download-directory.github.io/?url=https%3A%2F%2Fgithub.com%2Fworldline%2Fios-training%2Ftree%2Fmain%2Fsamples%2FSwiftUI-01-environment-object.swiftpm" target="_blank" rel="noopener noreferrer">link</a></li><li>This playground show an example of <a href="https://github.com/worldline/ios-training/tree/main/samples/SwiftUI-03-list.swiftpm" target="_blank" rel="noopener noreferrer"><code>List</code> and <code>AsyncImage</code></a></li><li>This playground show an example of <a href="https://github.com/worldline/ios-training/tree/main/samples/SwiftUI-04-list-navigation.swiftpm" target="_blank" rel="noopener noreferrer"><code>NavigationView</code> to show the details view of a list</a><img src="'+o+'" alt="list-nav-01" loading="lazy"><img src="'+l+'" alt="list-nav-02" loading="lazy"></li><li>This playground show an example of <a href="https://github.com/worldline/ios-training/tree/main/samples/SwiftUI-05-1st-visit.swiftpm" target="_blank" rel="noopener noreferrer"><code>UserDefaults</code> with a screen that is shown only during the first visit</a></li><li>This example shows some <a href="https://github.com/worldline/ios-training/tree/main/samples/SwiftUI-06-alignment.swiftpm" target="_blank" rel="noopener noreferrer">alignment customization</a></li><li>This example shows how to add <a href="https://github.com/worldline/ios-training/tree/main/samples/SwiftUI-07-searchable.swiftpm" target="_blank" rel="noopener noreferrer">a search bar to a list</a></li></ul><h2 id="exercises" tabindex="-1"><a class="header-anchor" href="#exercises"><span>Exercises</span></a></h2><ul><li>Develop a <code>DateInputView</code> view that allows entering the day, month, and year with three TextFields. This component exposes a Date deduced from the input in the fields. If the data is incorrect, we take today&#39;s date as default. <img src="'+r+'" alt="Date input exercise" loading="lazy"><ul><li><a href="https://github.com/worldline/ios-training/tree/main/samples/SwiftUI-02-binding-state-exercise.swiftpm" target="_blank" rel="noopener noreferrer">Solution</a> or can be downloaded with this <a href="https://download-directory.github.io/?url=https%3A%2F%2Fgithub.com%2Fworldline%2Fios-training%2Ftree%2Fmain%2Fsamples%2FSwiftUI-02-binding-state-exercise.swiftpm" target="_blank" rel="noopener noreferrer">link</a></li></ul></li></ul><h2 id="additional-pw-complete-some-official-swiftui-tutorials" tabindex="-1"><a class="header-anchor" href="#additional-pw-complete-some-official-swiftui-tutorials"><span>Additional PW: complete some official SwiftUI tutorials</span></a></h2><p>Apple provides a comprehensive <a href="https://developer.apple.com/tutorials/swiftui" target="_blank" rel="noopener noreferrer">SwiftUI tutorial</a> that covers most of the basic use cases such as creating views and handling inputs, animations and transitions.</p><p>Please cover these tutorials to get a good grasp of SwiftUI.</p><ul><li>Basic layout <ul><li><a href="https://developer.apple.com/tutorials/swiftui/creating-and-combining-views" target="_blank" rel="noopener noreferrer">Creating and combining views</a> (40 min)</li><li><a href="https://developer.apple.com/tutorials/swiftui/building-lists-and-navigation" target="_blank" rel="noopener noreferrer">Building lists and navigation</a> (35 min)</li></ul></li><li>State and binding <ul><li><a href="https://developer.apple.com/tutorials/swiftui/handling-user-input" target="_blank" rel="noopener noreferrer">Handling user input</a> (20 min)</li></ul></li><li>Animations and complex layouts <ul><li><a href="https://developer.apple.com/tutorials/swiftui/animating-views-and-transitions" target="_blank" rel="noopener noreferrer">Animating views and transitions</a> (20 min)</li><li><a href="https://developer.apple.com/tutorials/swiftui/composing-complex-interfaces" target="_blank" rel="noopener noreferrer">Composing complex interfaces</a> (20 min)</li><li><a href="https://developer.apple.com/tutorials/swiftui/working-with-ui-controls" target="_blank" rel="noopener noreferrer">Working with UI controls</a> (25 min)</li></ul></li></ul>',32)])])}const m=e(p,[["render",c]]),h=JSON.parse('{"path":"/swiftui/","title":"SwiftUI","lang":"en-US","frontmatter":{},"git":{"updatedTime":1759493730000,"contributors":[{"name":"Yassine Benabbas","username":"","email":"yassine.benabbas@worldline.com","commits":6},{"name":"YBE WL","username":"","email":"yassine.benabbas@worldline.com","commits":1},{"name":"yostane","username":"yostane","email":"1958676+yostane@users.noreply.github.com","commits":10,"url":"https://github.com/yostane"}],"changelog":[{"hash":"1706731674c6fad9efe125aac8b5ad1a261dca02","time":1759493730000,"email":"1958676+yostane@users.noreply.github.com","author":"yostane","message":"feat: Add SwiftUI Pokémon app with navigation, detail views, and first visit handling"},{"hash":"415d64ed4935b52775611cd4a21bb51754136cc3","time":1759481753000,"email":"1958676+yostane@users.noreply.github.com","author":"yostane","message":"Update documentation and dependencies for iOS training"},{"hash":"7d4b9b235e5332ade977bf3151de9a67467fc350","time":1759417348000,"email":"1958676+yostane@users.noreply.github.com","author":"yostane","message":"feat: Add AsyncImage example and images to UI development README"},{"hash":"977903015c7f9e8dfe52d4a40bccaa7616c0a99f","time":1759416860000,"email":"1958676+yostane@users.noreply.github.com","author":"yostane","message":"feat: Add examples for List, NavigationView, and UserDefaults in README"},{"hash":"f24384fcd226cd7e57768ac340ad0b75c55bceb4","time":1759409692000,"email":"1958676+yostane@users.noreply.github.com","author":"yostane","message":"docs: Update solution link for date input exercise in UI development README"},{"hash":"0b0aa22914d7ccb477a91507ebed286c6282f514","time":1759409589000,"email":"1958676+yostane@users.noreply.github.com","author":"yostane","message":"feat: Add DateInputView component and related exercises to UI development"},{"hash":"b2ee121fb089f8e042faa68a569f89be47b75bcf","time":1759392076000,"email":"1958676+yostane@users.noreply.github.com","author":"yostane","message":"docs: Update exercise links in Swift part 2 and UI development README"},{"hash":"cfe6bc0ef278ad79bc975658ac3f8ffe49ea7e54","time":1719497513000,"email":"1958676+yostane@users.noreply.github.com","author":"yostane","message":"feat: Add state and binding tutorial link to UI development README"},{"hash":"432e4d9d70b09066425e9ad59984af9c3952de97","time":1719496495000,"email":"1958676+yostane@users.noreply.github.com","author":"yostane","message":"chore: Remove unused Swift files and update project structure"},{"hash":"b5bc0ed9e5757f9ef24c16e43d35d7730528613b","time":1719475184000,"email":"1958676+yostane@users.noreply.github.com","author":"yostane","message":"chore: Update SwiftUI tutorial links and remove outdated content"},{"hash":"e66b979d6c914224a54eb87778f402344d288fb3","time":1701178983000,"email":"yassine.benabbas@worldline.com","author":"Yassine Benabbas","message":"fix typos"},{"hash":"1d83eeaed4ef0401e9ec2eefc4644b9878f79941","time":1701176637000,"email":"yassine.benabbas@worldline.com","author":"Yassine Benabbas","message":"Update some docs"},{"hash":"b9f19858d95f645bed5e3bd601a2638d3299dcf0","time":1660914925000,"email":"yassine.benabbas@worldline.com","author":"Yassine Benabbas","message":"fix some prose and add vale config"},{"hash":"6206c4fb63f68fcb7be786c37d74534d9bc509e4","time":1660750594000,"email":"yassine.benabbas@worldline.com","author":"Yassine Benabbas","message":"Global review"},{"hash":"91cd48cbbf5a71e2e2c24bff7ec8acb9eca7d816","time":1660636896000,"email":"yassine.benabbas@worldline.com","author":"Yassine Benabbas","message":"fix folder names and styling"},{"hash":"c18d66174629c4245d9b1f42dbc5372c039bc60e","time":1659541068000,"email":"yassine.benabbas@worldline.com","author":"YBE WL","message":"More updates to the training"},{"hash":"75b496de19b49b75ef8aba9947322140d5755b53","time":1658846550000,"email":"yassine.benabbas@worldline.com","author":"Yassine Benabbas","message":"More updates to the training"}]},"filePathRelative":"swiftui/README.md"}');export{m as comp,h as data};
