import{_ as a,c as e,a as s,b as t,o as i}from"./app-H6ZQ3zEr.js";const p={};function l(o,n){return i(),e("div",null,[...n[0]||(n[0]=[s('<h1 id="mini-project" tabindex="-1"><a class="header-anchor" href="#mini-project"><span>Mini project</span></a></h1><p>The final chapter of this training will ask you to create a SwiftUI app from scratch.</p><h2 id="requirements" tabindex="-1"><a class="header-anchor" href="#requirements"><span>Requirements</span></a></h2><p>The app consists of a movie explorer app with the following features:</p><ul><li>Search for movies by title.</li><li>View the details of the selected movie.</li><li>The app requires the user to be logged in.</li><li>The app allows a new user to register.</li><li>The movie list screen allows to logout from the app.</li><li>The app remembers the logged in user after a restart.</li><li>The app uses <a href="https://wl-training-api.koyeb.app/api-docs/" target="_blank" rel="noopener noreferrer">this API</a> for the authenticating and searching for movies. <ul><li>The <strong>/movies/search</strong> endpoint requires to pass the token retrieved from endpoint <strong>/user/login</strong> or <strong>user/register</strong> in this header: <code>Authorization: Bearer \\(userResponse.token)</code></li></ul></li><li>(Optional) The result of previous queries is locally cached.</li><li>(Optional) Add movie to local favorites ⭐️</li><li>(Optional) Animate the transition between the login view and the movie list view (<a href="https://www.hackingwithswift.com/quick-start/swiftui/how-to-add-and-remove-views-with-a-transition" target="_blank" rel="noopener noreferrer">tutorial</a>).</li></ul><p>A preview of the app can be seen here.</p>',6),t("iframe",{width:"720",height:"576",src:"https://www.youtube.com/embed/vh5AlaGK0Eo",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""},null,-1),s(`<div class="hint-container warning"><p class="hint-container-title">API limit considerations</p><p>To avoid reaching the OMDb API limit, the backend API used in this project is configured to return a fixed set of movie details for any search query. This means that some results will miss some fields. The code below shows how to handle optional fields in the Movie struct.</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift"><pre><code class="language-swift"><span class="line"><span class="token keyword">struct</span> <span class="token class-name">Movie</span><span class="token punctuation">:</span> <span class="token class-name">Codable</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">let</span> title<span class="token punctuation">:</span> <span class="token class-name">String</span></span>
<span class="line">    <span class="token keyword">let</span> released<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token operator">?</span></span>
<span class="line">    <span class="token keyword">let</span> director<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token operator">?</span></span>
<span class="line">    <span class="token keyword">let</span> actors<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token operator">?</span></span>
<span class="line">    <span class="token keyword">let</span> poster<span class="token punctuation">:</span> <span class="token class-name">String</span></span>
<span class="line">    <span class="token keyword">let</span> plot<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token operator">?</span></span>
<span class="line">    <span class="token keyword">let</span> metascore<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token operator">?</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h2 id="hints" tabindex="-1"><a class="header-anchor" href="#hints"><span>Hints</span></a></h2><ul><li>There are many techniques to handle the flow from the login view to the movie list view. On of them is to rely on a logged state. The following gives an overview how it looks like.</li></ul><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift"><pre><code class="language-swift"><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> loggedIn<span class="token punctuation">:</span> <span class="token boolean">false</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">if</span> loggedIn <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">MovieListView</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// The LoginView takes a callback that is called when the login succeeds</span></span>
<span class="line">            <span class="token class-name">LoginView</span> <span class="token punctuation">{</span> newLoggedIn <span class="token keyword">in</span></span>
<span class="line">                loggedIn <span class="token operator">=</span> newLoggedIn</span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>In the login view, use an enum to track the state of the login operation so that you can disable the login button when a request is running.</li></ul><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift"><pre><code class="language-swift"><span class="line"><span class="token keyword">enum</span> <span class="token class-name">LoginState</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">case</span> neutral<span class="token punctuation">,</span> loading<span class="token punctuation">,</span> success<span class="token punctuation">,</span> failure</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">struct</span> <span class="token class-name">LoginView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> loginState<span class="token punctuation">:</span> <span class="token class-name">LoginState</span> <span class="token operator">=</span> <span class="token punctuation">.</span>neutral</span>
<span class="line">    <span class="token comment">// other code</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Use a Task object to run async code.</li></ul><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift"><pre><code class="language-swift"><span class="line"><span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Login&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span> </span>
<span class="line">    loginState <span class="token operator">=</span> <span class="token punctuation">.</span>loading</span>
<span class="line">    <span class="token class-name">Task</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token keyword">await</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">onLoginSuccess</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container caution"><p class="hint-container-title">Swift Concurrency crashes on Swift Playground</p><p>Do not use the Swift Playground app to run you app as it does not work well with SwiftUI + Swift Concurrency (async, await and Task). Instead, you can create an Xcode project of type Playground to combine the power of Xcode and the simplicity of Playground projects.</p></div><ul><li>Use <a href="https://github.com/Tunous/DebouncedOnChange" target="_blank" rel="noopener noreferrer">DebouncedOnChange</a> Swift package to optimize search.</li><li>To generate the initial code for a preview, open a view and then use the Xcode feature <em>Editor -&gt; Create preview</em></li><li>The List view requires that you specify an <code>id</code> field <code>List(movies, id: \\.title)</code> or that the items conform to Identifiable protocol</li><li>If you can&#39;t add SwiftPM packages from Xcode, add them by editing the <em>package.swift</em> file by hand. Here is an example below.</li></ul><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift"><pre><code class="language-swift"><span class="line"><span class="token comment">// swift-tools-version: 6.0</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// WARNING:</span></span>
<span class="line"><span class="token comment">// This file is automatically generated.</span></span>
<span class="line"><span class="token comment">// Do not edit it by hand because the contents will be replaced.</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token class-name">PackageDescription</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token class-name">AppleProductTypes</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">let</span> package <span class="token operator">=</span> <span class="token class-name">Package</span><span class="token punctuation">(</span></span>
<span class="line">    name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;Moovy&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">    platforms<span class="token punctuation">:</span> <span class="token punctuation">[</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">iOS</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;18.0&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">macOS</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;14.0&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    products<span class="token punctuation">:</span> <span class="token punctuation">[</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">iOSApplication</span><span class="token punctuation">(</span></span>
<span class="line">            name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;Moovy&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">            targets<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&quot;AppModule&quot;</span></span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">            displayVersion<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;1.0&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">            bundleVersion<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;1&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">            appIcon<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">placeholder</span><span class="token punctuation">(</span>icon<span class="token punctuation">:</span> <span class="token punctuation">.</span>sun<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            accentColor<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">presetColor</span><span class="token punctuation">(</span><span class="token punctuation">.</span>cyan<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            supportedDeviceFamilies<span class="token punctuation">:</span> <span class="token punctuation">[</span></span>
<span class="line">                <span class="token punctuation">.</span>pad<span class="token punctuation">,</span></span>
<span class="line">                <span class="token punctuation">.</span>phone</span>
<span class="line">            <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">            supportedInterfaceOrientations<span class="token punctuation">:</span> <span class="token punctuation">[</span></span>
<span class="line">                <span class="token punctuation">.</span>portrait<span class="token punctuation">,</span></span>
<span class="line">                <span class="token punctuation">.</span>landscapeRight<span class="token punctuation">,</span></span>
<span class="line">                <span class="token punctuation">.</span>landscapeLeft<span class="token punctuation">,</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">portraitUpsideDown</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">when</span><span class="token punctuation">(</span>deviceFamilies<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">.</span>pad<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">            capabilities<span class="token punctuation">:</span> <span class="token punctuation">[</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">outgoingNetworkConnections</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">            appCategory<span class="token punctuation">:</span> <span class="token punctuation">.</span>entertainment</span>
<span class="line">        <span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    dependencies<span class="token punctuation">:</span> <span class="token punctuation">[</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">package</span><span class="token punctuation">(</span>url<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;https://github.com/Tunous/DebouncedOnChange.git&quot;</span></span><span class="token punctuation">,</span> from<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;2.0.0&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">package</span><span class="token punctuation">(</span>url<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;https://github.com/kishikawakatsumi/KeychainAccess.git&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;4.0.0&quot;</span></span><span class="token operator">..&lt;</span><span class="token string-literal"><span class="token string">&quot;5.0.0&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    targets<span class="token punctuation">:</span> <span class="token punctuation">[</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">executableTarget</span><span class="token punctuation">(</span></span>
<span class="line">            name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;AppModule&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">            dependencies<span class="token punctuation">:</span> <span class="token punctuation">[</span></span>
<span class="line">                <span class="token string-literal"><span class="token string">&quot;DebouncedOnChange&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token string-literal"><span class="token string">&quot;KeychainAccess&quot;</span></span></span>
<span class="line">            <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">            path<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;.&quot;</span></span></span>
<span class="line">        <span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    swiftLanguageVersions<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;6&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11)])])}const u=a(p,[["render",l]]),r=JSON.parse('{"path":"/mini-project/","title":"Mini project","lang":"en-US","frontmatter":{},"git":{"updatedTime":1759499622000,"contributors":[{"name":"YBE WL","username":"","email":"yassine.benabbas@worldline.com","commits":6},{"name":"Yassine Benabbas","username":"","email":"yassine.benabbas@worldline.com","commits":4},{"name":"yostane","username":"yostane","email":"1958676+yostane@users.noreply.github.com","commits":3,"url":"https://github.com/yostane"}],"changelog":[{"hash":"a455b8edca0e5a9b9f40e301360b33e278a9d11d","time":1759499622000,"email":"1958676+yostane@users.noreply.github.com","author":"yostane","message":"feat: Enhance user response handling and improve optional fields in movie model"},{"hash":"af97eeeb334c034b297cf62a001144fba5b90316","time":1759345206000,"email":"1958676+yostane@users.noreply.github.com","author":"yostane","message":"docs: Update API link in movie explorer app README and add exercise solutions in Swift part 2"},{"hash":"969c61d3d85048d1b90bc97923f6a34fac7b76bd","time":1701187541000,"email":"yassine.benabbas@worldline.com","author":"Yassine Benabbas","message":"Add another optional task on the mini project"},{"hash":"8593e77946ee9ab41e2056cb7a45d3c42596f175","time":1701030525000,"email":"1958676+yostane@users.noreply.github.com","author":"yostane","message":"MAJ API url"},{"hash":"4b3504769a71659ae1445b75a8d9cf1bd41bc188","time":1660810082000,"email":"yassine.benabbas@worldline.com","author":"Yassine Benabbas","message":"proof read mini project"},{"hash":"8aba1e14a0af2385df74e56f53918d8ed8c4a307","time":1660654385000,"email":"yassine.benabbas@worldline.com","author":"Yassine Benabbas","message":"Embed app demo video"},{"hash":"91cd48cbbf5a71e2e2c24bff7ec8acb9eca7d816","time":1660636896000,"email":"yassine.benabbas@worldline.com","author":"Yassine Benabbas","message":"fix folder names and styling"},{"hash":"e61d3d3f5e5aa0c15c81707bb72f5173371de61f","time":1660319559000,"email":"yassine.benabbas@worldline.com","author":"YBE WL","message":"Add video demo link"},{"hash":"8fe45caf19306c876a7120e3d78b28f39cab347d","time":1660317663000,"email":"yassine.benabbas@worldline.com","author":"YBE WL","message":"Update miniproject"},{"hash":"5cffeff6d1438a353b6778c1c9fcb06bd4925227","time":1660317572000,"email":"yassine.benabbas@worldline.com","author":"YBE WL","message":"Added logout and transitions"},{"hash":"58272fc3dc11f47d332f628934712c1dacca0b99","time":1660312914000,"email":"yassine.benabbas@worldline.com","author":"YBE WL","message":"Remove space from playground name"},{"hash":"8015f60271be7287fb73ab7e7ec8e1aa9aab18a3","time":1660312721000,"email":"yassine.benabbas@worldline.com","author":"YBE WL","message":"Update mini project"},{"hash":"4da5ab235bae27edc00c271f96108a175ec547fa","time":1660059905000,"email":"yassine.benabbas@worldline.com","author":"YBE WL","message":"Some quick updates"}]},"filePathRelative":"mini-project/README.md"}');export{u as comp,r as data};
